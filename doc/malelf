.TH MALELF 7

.SH NAME
malelf \- is a malefic tool to dissect and infect ELF binaries

.SH SYNOPSIS
malelf [COMMAND] [OPTIONS]
.br
malelf -h


.SH DESCRIPTION
Malelficus is a malefic tool to dissect and infect ELF binaries,
.br
it was created to help in process of malware development and
.br
malware analysis of ELF binaries on Linux.

With malELFicus you could modify a ELF binary, infecting a 
.br
specific segment or append your own segment to the end of the 
.br
binary.

.SH OPTIONS
Malelficus works with commands, where each has a specific goal, 
.br
they are: dissect, reverse_elf, disas, entry_point, infect, 
.br
shellcode, copy, database, analyze and dynanalyse.

.SS "dissect"
This command display information about the ELF binary.
.TP
.B \-h
.br
Print a usage message briefly summarizing these command-line
.br
options, then exit.

.TP
.BI \-i " FILE" 
Input binary file

.TP
.B \-e
.br
Display ELF Header Table

.TP
.B \-p
.br
Display Program Header Table

.TP
.B \-s
.br
Display Section Header Table

.TP
.B \-S
.br
Display Symbol Table

.SS "reverse_elf"
This command reverse the ELF binary image in the C structs representation.
.br
It will provide the chance of manual edit the binary image.

.TP
.B \-h
.br
Print a usage message briefly summarizing these command-line
.br
options, then exit.

.TP
.BI \-i " FILE" 
Input binary/source file

.TP
.BI \-o " FILE" 
Output binary/C file

.TP
.B \-r
.br
Reverse the ELF binary into your C-structures

.TP
.B \-m
.br
Mount the C file representarion of the binary into binary

.SS "disas"
Disassembly binary ELF in NASM compatible format.

.TP
.B \-h
.br
Print a usage message briefly summarizing these command-line
.br
options, then exit.

.TP
.BI \-i " FILE" 
Input binary file

.TP
.BI \-o " OUTPUT-ASM" 
Output file, default is stdout

.TP
.BI \-s " SECTION-NAME" 
Disassembly the section

.TP
.B \-n
.br
Count NOPs for each section

.TP
.BI \-m " NUMBER" 
Only show NOP's count bigger than this

.SS "entry_point"
Entry point command.

.TP
.B \-h
.br
Print a usage message briefly summarizing these command-line
.br
options, then exit.

.TP
.B \-q
.br
quiet mode

.TP
.B \-v
.br
Verbose mode

.TP
.B \-g
.br
Get binary entry point

.TP
.BI \-u " OFFSET" 
Update entry point

.TP
.BI \-i " FILE" 
Input binary file

.TP
.BI \-o " FILE" 
Output binary file

.SS "infect"
This command tries to infect a binary using the method passed in -m.

.TP
.B \-h
.br
Print a usage message briefly summarizing these command-line
.br
options, then exit.

.TP
.BI \-m " METHOD" 
Infect methods:
.br	
0 - Silvio Cesare technique (text padding append).
.br
1 - Text segment prepend (Ryan O'Neill <ryan@bitlackeys.com>).
.br
2 - NOP

.TP
.BI \-i " BINARY_FILE" 
Input binary file

.TP
.BI \-o " INFECTED_FILE" 
Output infected file

.TP
.BI \-p " MALWARE" 
Malware FLAT binary (eg.: nasm -f bin)

.TP
.BI \-f " OFFSET" 
Offset in malware to overwrite with the true entry_point


.SS "shellcode"
This command create the virus shellcode in the proper format 
.br
for use with the infect command.

.SS "copy"
Copy ELF binary.

.SS "database"
Database manager.

.SS "analyse"
Statically analyse the ELF binary for malwares.

.SS "dynanalise"
Dinamically analyse the ELF binary for malwares.

.SH EXAMPLES

.SH BUGS
Report malelf bugs to natel@secplus.com.br
.br
Malelficus home page: <http://tiago4orion.github.com/malelficus/>

.SH AUTHOR
Written by Tiago Natel de Moura and Daniel.
